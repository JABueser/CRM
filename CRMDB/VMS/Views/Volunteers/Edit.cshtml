@model VMS.Models.EditViewModel

<h2>Edit Volunteer Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input id="VolunteerPerson.VolunteerID" name="VolunteerPerson.VolunteerID" type="hidden" value="@Model.VolunteerPerson.VolunteerID" />
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h3>Personal Information</h3>
        <div class="row">
            <div class="col-lg-3">
                @*@Html.LabelFor(model => model.FirstName)*@
                First Name
                @Html.EditorFor(model => model.VolunteerPerson.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">
                Last Name
                @Html.EditorFor(model => model.VolunteerPerson.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3">

            </div>

        </div>

        <br />

        <div class="row">
            <div class="col-lg-3">
                Birth Date
                @Html.EditorFor(model => model.VolunteerPerson.BirthDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.BirthDate, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3">

            </div>

        </div>

        <br />

        <div class="row">
            <div class="col-lg-3">
                Address
                @Html.EditorFor(model => model.VolunteerPerson.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Address, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3">
                Address
                @Html.EditorFor(model => model.VolunteerPerson.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="row">
            <div class="col-lg-3">
                City
                @Html.EditorFor(model => model.VolunteerPerson.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">
                State
                <br />
                <select class="form-control" id="State" name="State">
                    <option value="@Model.VolunteerPerson.State">@Model.VolunteerPerson.State</option>
                    <option value="Alabama">Alabama</option>
                    <option value="Alaska">Alaska</option>
                    <option value="Arizona">Arizona</option>
                    <option value="Arkansas">Arkansas</option>
                    <option value="California">California</option>
                    <option value="Colorado">Colorado</option>
                    <option value="Connecticut">Connecticut</option>
                    <option value="Delaware">Delaware</option>
                    <option value="District of Columbia">District Of Columbia</option>
                    <option value="Florida">Florida</option>
                    <option value="Georgia">Georgia</option>
                    <option value="Hawaii">Hawaii</option>
                    <option value="Idaho">Idaho</option>
                    <option value="Illinois">Illinois</option>
                    <option value="Indiana">Indiana</option>
                    <option value="Iowa">Iowa</option>
                    <option value="Kansas">Kansas</option>
                    <option value="Kentucky">Kentucky</option>
                    <option value="Louisiana">Louisiana</option>
                    <option value="Maine">Maine</option>
                    <option value="Maryland">Maryland</option>
                    <option value="Massachusetts">Massachusetts</option>
                    <option value="Michigan">Michigan</option>
                    <option value="Minnesota">Minnesota</option>
                    <option value="Mississippi">Mississippi</option>
                    <option value="Missouri">Missouri</option>
                    <option value="Montana">Montana</option>
                    <option value="Nebraska">Nebraska</option>
                    <option value="Nevada">Nevada</option>
                    <option value="New Hampshire">New Hampshire</option>
                    <option value="New Jersey">New Jersey</option>
                    <option value="New Mexico">New Mexico</option>
                    <option value="New York">New York</option>
                    <option value="North Carolina">North Carolina</option>
                    <option value="North Dakota">North Dakota</option>
                    <option value="Ohio">Ohio</option>
                    <option value="Oklahoma">Oklahoma</option>
                    <option value="Oregon">Oregon</option>
                    <option value="Pennsylvania">Pennsylvania</option>
                    <option value="Rhode Island">Rhode Island</option>
                    <option value="South Carolina">South Carolina</option>
                    <option value="South Dakota">South Dakota</option>
                    <option value="Tennessee">Tennessee</option>
                    <option value="Texas">Texas</option>
                    <option value="Utah">Utah</option>
                    <option value="Vermont">Vermont</option>
                    <option value="Virginia">Virginia</option>
                    <option value="Washington">Washington</option>
                    <option value="West Virginia">West Virginia</option>
                    <option value="Wisconsin">Wisconsin</option>
                    <option value="Wyoming">Wyoming</option>
                </select>
            </div>

            <div class="col-lg-3">
                Zip Code
                @Html.EditorFor(model => model.VolunteerPerson.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        <div class="row">

            <div class="col-lg-3">
                Email Address
                @Html.EditorFor(model => model.VolunteerPerson.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Email, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3">
                Phone Number (xxx-xxx-xxxx)
                @Html.EditorFor(model => model.VolunteerPerson.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Phone, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3">

            </div>
            <div class="col-lg-3">

            </div>

        </div>

        <br />
        <hr />

        <h3>Emergency Contact</h3>

        <div class="row">

            <div class="col-md-4">
                Emergency Contact
                @Html.EditorFor(model => model.VolunteerPerson.EmergencyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.EmergencyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-md-4">
                Relation to you
                @Html.EditorFor(model => model.VolunteerPerson.EmergencyRelation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.EmergencyRelation, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-md-4">
                Emergency Contact Phone Number
                @Html.EditorFor(model => model.VolunteerPerson.EmergencyPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.EmergencyPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <hr />

        <h3>Organization</h3>

        <div class="row">
            <div class="col-md-4">
                Organization
                @Html.EditorFor(model => model.VolunteerPerson.Organization, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Organization, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                Occupation
                @Html.EditorFor(model => model.VolunteerPerson.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Occupation, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-4">

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                Church Name ("n/a" if you aren't affiliated)
                @Html.EditorFor(model => model.VolunteerPerson.Church, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Church, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-4">
                Pastor Name ("n/a" if this doesn't apply)
                @Html.EditorFor(model => model.VolunteerPerson.Pastor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Pastor, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="row">
            <div class="col-md-4">
                How did you hear about us?
                @Html.EditorFor(model => model.VolunteerPerson.HowDidYouHear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.HowDidYouHear, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <hr />

        <h3>Criminal Past</h3>
        <div class="row">

            <div class="col-md-4">
                Have you ever been convited of a Felony?

                @{
                    var boolean = (Model.VolunteerPerson.Felony.Equals("Yes") ? true : false);
                }

                <div class="form-check">
                    <input class="form-check-input" type="radio" name="VolunteerPerson.Felony" id="FelonyYes" value="Yes" data-val="true" data-val-required="The Felony field is required."
                           @if (boolean)
                           {
                               @: checked
                           }>
                    <label class="form-check-label" for="Felony">
                        Yes
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="VolunteerPerson.Felony" id="FelonyNo" value="No" data-val="true" data-val-required="The Felony field is required."
                           @if (!boolean)
                           {
                               @: checked
                           }>
                    <label class="form-check-label" for="FelonyNo">
                        No
                    </label>
                </div>
                <span class="field-validation-valid text-danger" data-valmsg-for="Felony" data-valmsg-replace="true"></span>
            </div>
        </div>
        <br />


        <div class="row">
            <div class="col-md-4">
                Nature of the Felony? ("n/a" if you answered no)
                @Html.TextAreaFor(model => model.VolunteerPerson.NatureOfFelony, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.NatureOfFelony, "", new { @class = "text-danger" })
            </div>

        </div>

        <br />

        <div class="row">
            <div class="col-md-4">

            </div>

            <div class="col-md-4">

            </div>

            <div class="col-md-4">

            </div>
        </div>


        <br />
        <hr />

        <h3>Disabilities</h3>
        <div class="row">

            <div class="col-md-4">
                Do you have any Disabilities? If so explain below.
                <br />
                @Html.TextAreaFor(model => model.VolunteerPerson.Disabilities, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Disabilities, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <hr />

        <h3>Skills</h3>
        <div class="row">
            <div class="col-md-4">
                Please list some of your skills below.
                <br />
                @Html.TextAreaFor(model => model.VolunteerPerson.Skills, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VolunteerPerson.Skills, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <hr />

        <h3>Availability</h3>
        <br />

        @{
            int dayTotal = 0;
        }

        @foreach (var av in Model.AllAvailability)
                    {
            <div>
                <input type="checkbox" name="SelectedDays" value="@av.AvailabilityID" id="@dayTotal" @(Model.SelectedDays.Contains(av.AvailabilityID) ? "checked='checked'" : null) />
                <label class="form-check-label" for="@dayTotal">
                    @av.Day
                </label>
            </div>
            dayTotal++;
        }

        <br />
        <hr />

        <h3>What Categories are You Interested to Volunteer In?</h3>
        <div>

            @{
                int total = 8;
            }
            <table id="memberlist" style="width:100%">
                <tbody>
                    @foreach (var ct in Model.AllCategories)
                    {
                        if (total % 4 == 0)
                        {
                            @:<tr style="height:30px">
                            }
                            <td>
                                <input type="checkbox" name="SelectedCategories" value="@ct.CategoryID" id="@total" @(Model.SelectedCategories.Contains(ct.CategoryID) ? "checked='checked'" : null) />
                                <label class="form-check-label" for="@total">
                                    @ct.Category1
                                </label>
                            </td>
                            if (total + 1 % 5 == 0)
                            {
                            @:</tr>
                        }
                        total++;
                    }
                </tbody>
            </table>
        </div>

        <br />

        <div class="form-group">
            <div class="text-center">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}