
<h2>Volunteers</h2>

@*<p>
        <text>Category</text>
        @Html.DropDownListFor(x => x.SelectedCategoryID, new SelectList(Model.AllCategories, "CategoryID", "Category1"), "Select a category")
    </p>*@




@model CRMSite.Models.HourViewModel

<table id="volunteerTable" class="display cell-border compact">
    <thead>
        <tr>
            <th class="text-center">
                First Name
            </th>
            <th class="text-center">
                Last Name
            </th>
            <th class="text-center">
                E-Mail Address
            </th>
            <th class="text-center">
                Category(s)
            </th>
            <th class="text-center">
                Total Hours
            </th>
            <th class="text-center">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Vols)
        {
            <tr>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td class="text-center">
                    |
                    @foreach (var c in item.Categories)
                    {
                        @(c.Category1 + " | ")
                    }
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.TotalHours)
                </td>
                <td class="text-center">
                    <div>
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#@item.VolunteerID">
                            Add Hours
                        </button>

                        <br />

                        @Html.ActionLink("Edit", "Edit", new { id = item.VolunteerID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.VolunteerID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.VolunteerID })
                    </div>
                </td>
            </tr>

            <div class="modal" id="@item.VolunteerID">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @using (Html.BeginForm())
                        {
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <!-- Modal body -->
                            <div class="modal-body">
                                <p style="font-size:x-large">@item.FirstName @item.LastName</p>

                                <div>
                                    <div>
                                        Date:
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br />
                                <div>
                                    <div>
                                        Hours Worked:
                                        @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br />
                                <div>
                                    <div>
                                        What Category Do The Hours Apply To? <br />
                                        <select id="CatName" name="CatName" style="width:300px;">
                                            <option value=1>Doctor</option>
                                            <option value=2>Dentist</option>
                                            <option value=3>Nurse</option>
                                            <option value=4>Chapel Ministry</option>
                                            <option value=5>Bus Driver</option>
                                            <option value=6>Office/Clerical</option>
                                            <option value=7>Maintenance</option>
                                            <option value=8>Auto Shop</option>
                                            <option value=9>Food Service</option>
                                            <option value=10>Mens Division</option>
                                            <option value=11>Thrift Store</option>
                                            <option value=12>Special Events</option>
                                            <option value=13>Women, Children, and Families</option>
                                            <option value=14>Job Training/Life Skills Instructor</option>
                                        </select>
                                        @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                                        <input id="VolID" name="VolID" type="hidden" value="@item.VolunteerID" />
                                    </div>
                                </div>
                                <br />
                            </div>

                            <!-- Modal footer -->
                            <div class="modal-footer">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </tbody>
    <tfoot><tr></tr></tfoot>
</table>

<link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" rel="stylesheet" />

@section scripts{
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script>

            var Popup, dataTable;

            function Delete(id) {
                if(confirm('Are You Sure to Delete this Employee Record ?'))
                {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Delete","Volunteer")/' + id,
                        success: function (data) {
                            if (data.success)
                            {
                                dataTable.ajax.reload();

                                $.notify(data.message, {
                                    globalPosition: "top center",
                                    className: "success"
                                })

                            }
                        }
                    });
                }
            }

            $(function () {
                dataTable = $("#volunteerTable").DataTable();

                $("#datepicker_from").change(function () {
                    minDateFilter = new Date(this.value).getTime();
                        dataTable.draw();
                    });

                $("#datepicker_to").change(function () {
                    maxDateFilter = new Date(this.value).getTime();
                    dataTable.draw();
                });

            });
            minDateFilter = "";
            maxDateFilter = "";

            $.fn.dataTableExt.afnFiltering.push(
                function (oSettings, aData, iDataIndex) {
                    if (typeof aData._date == 'undefined') {
                        aData._date = new Date(aData[0]).getTime();
                    }

                    if (minDateFilter && !isNaN(minDateFilter)) {
                        if (aData._date < minDateFilter) {
                            return false;
                        }
                    }

                    if (maxDateFilter && !isNaN(maxDateFilter)) {
                        if (aData._date > maxDateFilter) {
                            return false;
                        }
                    }

                    return true;
                }
            );

            $(function () {
                $("#datepicker").datepicker();
            });

    </script>
}